{"ast":null,"code":"import _regeneratorRuntime from \"/Users/varundubey/Desktop/projx/defi/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/varundubey/Desktop/projx/defi/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/varundubey/Desktop/projx/defi/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/varundubey/Desktop/projx/defi/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/varundubey/Desktop/projx/defi/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/varundubey/Desktop/projx/defi/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/varundubey/Desktop/projx/defi/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/varundubey/Desktop/projx/defi/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport Tether from \"../truffle_abis/Tether.json\";\nimport RWD from \"../truffle_abis/RWD.json\";\nimport DecentralBank from \"../truffle_abis/DecentralBank.json\";\nimport Main from \"./Main\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"no eth browser detected\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether, tetherBalance, rwdData, rwd, rwdBalance, decentralBankData, decentralBank, stakingBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                console.log(networkId); //load tether contract\n\n                tetherData = Tether.networks[networkId];\n\n                if (!tetherData) {\n                  _context3.next = 21;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 15;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 15:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                console.log(this.state.account);\n                console.log(tetherBalance);\n                _context3.next = 22;\n                break;\n\n              case 21:\n                window.alert(\"error tether contract not deployed\");\n\n              case 22:\n                //lload reward\n                rwdData = RWD.networks[networkId];\n\n                if (!rwdData) {\n                  _context3.next = 33;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n                this.setState({\n                  rwd: rwd\n                });\n                _context3.next = 28;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 28:\n                rwdBalance = _context3.sent;\n                this.setState({\n                  rwdBalance: rwdBalance.toString()\n                });\n                console.log(rwdBalance);\n                _context3.next = 34;\n                break;\n\n              case 33:\n                window.alert(\"rwd contrcat didnt load\");\n\n              case 34:\n                decentralBankData = DecentralBank.networks[networkId];\n\n                if (!decentralBankData) {\n                  _context3.next = 45;\n                  break;\n                }\n\n                decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n                this.setState({\n                  decentralBank: decentralBank\n                });\n                _context3.next = 40;\n                return decentralBank.methods.stakingBalance(this.state.account).call();\n\n              case 40:\n                stakingBalance = _context3.sent;\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                });\n                console.log(stakingBalance);\n                _context3.next = 46;\n                break;\n\n              case 45:\n                window.alert(\"decentralbank didnt load\");\n\n              case 46:\n                this.setState({\n                  loading: false\n                });\n\n              case 47:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.unstakeTokens = function () {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.decentralBank.methods.unstakeTokens().send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.stakeTokens = function (amount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.tether.methods.approve(_this.state.decentralBank._address, amount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.decentralBank.methods.depositTokens(amount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      account: \"oxo\",\n      decentralBank: {},\n      tether: {},\n      rwd: {},\n      zen: {},\n      tetherBalance: 0,\n      rwdBalance: 0,\n      zenBalance: 0,\n      stakingBalance: 0,\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var content;\n      {\n        this.state.loading ? content = /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 22\n          }\n        }, \"LOADING....\") : content = /*#__PURE__*/React.createElement(Main, {\n          tethBal: this.state.tetherBalance,\n          rwdBalance: this.state.rwdBalance,\n          stakingBalance: window.web3.utils.fromWei(this.state.stakingBalance),\n          stakeTokens: this.stakeTokens,\n          unstakeTokens: this.unstakeTokens,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }\n        });\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: \"600px\",\n          minHeight: \"100vm\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }, content))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App; //html is markup language for writing website\n//css is for styling website\n//js allows website to be dynamic","map":{"version":3,"sources":["/Users/varundubey/Desktop/projx/defi/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","RWD","DecentralBank","Main","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","account","setState","net","getId","networkId","console","log","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","rwdData","rwd","rwdBalance","decentralBankData","decentralBank","stakingBalance","loading","props","unstakeTokens","send","from","on","hash","stakeTokens","amount","approve","_address","depositTokens","zen","zenBalance","content","utils","fromWei","maxWidth","minHeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Navbar from \"./Navbar\";\n\nimport \"./App.css\";\n\nimport Web3 from \"web3\";\n\nimport Tether from \"../truffle_abis/Tether.json\";\n\nimport RWD from \"../truffle_abis/RWD.json\";\nimport DecentralBank from \"../truffle_abis/DecentralBank.json\";\nimport Main from \"./Main\";\n\nclass App extends React.Component {\n  async UNSAFE_componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"no eth browser detected\");\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const account = await web3.eth.getAccounts();\n    this.setState({ account: account[0] });\n    const networkId = await web3.eth.net.getId();\n    console.log(networkId);\n    //load tether contract\n    const tetherData = Tether.networks[networkId];\n    if (tetherData) {\n      const tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n      this.setState({ tether });\n      let tetherBalance = await tether.methods\n        .balanceOf(this.state.account)\n        .call();\n      this.setState({ tetherBalance: tetherBalance.toString() });\n      console.log(this.state.account);\n      console.log(tetherBalance);\n    } else {\n      window.alert(\"error tether contract not deployed\");\n    }\n\n    //lload reward\n    const rwdData = RWD.networks[networkId];\n    if (rwdData) {\n      const rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n      this.setState({ rwd });\n      let rwdBalance = await rwd.methods.balanceOf(this.state.account).call();\n      this.setState({ rwdBalance: rwdBalance.toString() });\n      console.log(rwdBalance);\n    } else {\n      window.alert(\"rwd contrcat didnt load\");\n    }\n    const decentralBankData = DecentralBank.networks[networkId];\n    if (decentralBankData) {\n      const decentralBank = new web3.eth.Contract(\n        DecentralBank.abi,\n        decentralBankData.address\n      );\n      this.setState({ decentralBank });\n      let stakingBalance = await decentralBank.methods\n        .stakingBalance(this.state.account)\n        .call();\n      this.setState({ stakingBalance: stakingBalance.toString() });\n      console.log(stakingBalance);\n    } else {\n      window.alert(\"decentralbank didnt load\");\n    }\n\n    this.setState({ loading: false });\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      account: \"oxo\",\n      decentralBank: {},\n      tether: {},\n      rwd: {},\n      zen: {},\n      tetherBalance: 0,\n      rwdBalance: 0,\n      zenBalance: 0,\n      stakingBalance: 0,\n      loading: true,\n    };\n  }\n  unstakeTokens = () => {\n    this.setState({ loading: true });\n    this.state.decentralBank.methods\n      .unstakeTokens()\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  stakeTokens = (amount) => {\n    this.setState({ loading: true });\n    this.state.tether.methods\n      .approve(this.state.decentralBank._address, amount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.decentralBank.methods\n          .depositTokens(amount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          });\n      });\n  };\n\n  render() {\n    let content;\n    {\n      this.state.loading\n        ? (content = <p>LOADING....</p>)\n        : (content = (\n            <Main\n              tethBal={this.state.tetherBalance}\n              rwdBalance={this.state.rwdBalance}\n              stakingBalance={window.web3.utils.fromWei(\n                this.state.stakingBalance\n              )}\n              stakeTokens={this.stakeTokens}\n              unstakeTokens={this.unstakeTokens}\n            ></Main>\n          ));\n    }\n    return (\n      <div>\n        <Navbar account={this.state.account}></Navbar>\n\n        <div className=\"container-fluid mt-5\">\n          <main\n            role=\"main\"\n            className=\"col-lg-12 ml-auto mr-auto\"\n            style={{ maxWidth: \"600px\", minHeight: \"100vm\" }}\n          >\n            <div>{content}</div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//html is markup language for writing website\n//css is for styling website\n//js allows website to be dynamic\n"]},"metadata":{},"sourceType":"module"}